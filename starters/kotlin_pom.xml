
<project>
  <name>Kotlin POM</name>
  <description>Kotlin's starter POM.</description>

  <properties>
    <!-- Placeholder. Populated by Gradle build script -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Kotlin -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <!-- Hexagon -->
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>core</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>http_client_jetty</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>http_server_jetty</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>http_server_servlet</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>logging_logback</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>logging_slf4j_jul</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>http_client</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>http_server</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>templates</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>serialization_jackson_csv</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>serialization_jackson_json</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>serialization_jackson_xml</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>serialization_jackson_yaml</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>templates_freemarker</artifactId>
        <version>${hexagon.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>templates_pebble</artifactId>
        <version>${hexagon.version}</version>
      </dependency>

      <!-- Tests -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-test</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>io.mockk</groupId>
        <artifactId>mockk</artifactId>
        <version>${mockk.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>verify</defaultGoal>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>

          <configuration>
            <jvmTarget>${maven.compiler.target}</jvmTarget>
          </configuration>

          <executions>
            <execution>
              <id>compile</id>
              <phase>process-sources</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>

            <execution>
              <id>test-compile</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>log</directory>
              </fileset>
              <fileset>
                <directory>${basedir}</directory>
                <includes>
                  <include>**/*.log</include>
                  <include>**/*.hprof</include>
                  <include>**/*.build_artifacts.txt</include>
                  <include>**/.attach_pid*</include>
                  <include>**/hs_err_pid*</include>
                  <include>**/dependency-reduced-pom.xml</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>${exec.mainClass}</mainClass>
              </manifest>
            </archive>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>
          <executions>
            <execution>
              <id>jar-with-dependencies</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.4</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer
                    implementation=
                      "org.apache.maven.plugins.shade.resource.ServicesResourceTransformer">
                  </transformer>
                  <transformer
                    implementation=
                      "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>${exec.mainClass}</mainClass>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.8</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
          <configuration>
            <port>9000</port>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.9</version> <!-- 1.10 doesn't work properly -->
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jetbrains.dokka</groupId>
          <artifactId>dokka-maven-plugin</artifactId>
          <version>${dokka.version}</version>
          <configuration>
            <includeNonPublic>false</includeNonPublic>
            <reportUndocumented>false</reportUndocumented>
            <samples>
              <dir>${project.build.testSourceDirectory}</dir>
            </samples>
          </configuration>
          <executions>
            <execution>
              <phase>pre-site</phase>
              <goals>
                <goal>dokka</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
