
name: Release Branch

on:
  push:
    branches: [ release/** ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Build Project
        uses: ./.github/actions/gradle

  sample_keystores:
    name: Sample Keystores
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Create Sample Keystores
        uses: ./.github/actions/gradle
        with:
          tasks: createCa createIdentities

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build, sample_keystores ]
    steps:

      # SET UP
      - name: Check Out
        uses: actions/checkout@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with: { java-version: 17, distribution: temurin }
      - name: Install ImageMagick
        uses: ./.github/actions/image_magick
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-mkdocs-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
          restore-keys: ${{ runner.os }}-mkdocs-
          path: |
            ~/.local/bin
            ~/.local/lib/python*/site-packages

      # PROCESS
      - name: Update Site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export REMOTE="https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git remote set-url origin "$REMOTE"
          git config --global user.email "juanjoaguililla@gmail.com"
          git config --global user.name "jaguililla"
          ./gradlew --info build
          ./gradlew --info -x build buildSite

      - name: Publish Packages
        env:
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: ./gradlew --info --no-daemon -x test release
